class CreateTemplateBlock{constructor(e,t,s){l=l.bind(this),this.changeSlide=this.changeSlide.bind(this),this.onSlideChange=this.onSlideChange.bind(this),this.setImageFilename=this.setImageFilename.bind(this),this.rootElem=document.querySelector(`${e}`),this.selector=e,this.otherParams={renderPosition:"start",name:""};for(let e in s)this.otherParams[e]=s[e];function l(){setTimeout((()=>{const e=new URL(window.location.href).searchParams.get(this.otherParams.name),t=this.sliderContainer.querySelector(`[data-steps-slider-value="${e}"]`).dataset.sliderSlideIndex;this.sliderInstance.setSlidesWidth(),this.sliderInstance.slideTo(this.sliderContainer,t),this.sliderContainer.removeEventListener("sliderinit",l)}),750)}this.renderPosition="start"===this.otherParams.renderPosition?"afterbegin":"beforeend",this.getParams(t).then((()=>{this.hasSlider=!this.params.params,this.renderTemplateBlockBody(),this.hasSlider&&(this.sliderContainer=this.rootElem.querySelector(".slider"),this.sliderContainer.addEventListener("sliderinit",l))}))}getParams(e){return new Promise((t=>{e?"object"==typeof e?(this.params=e,t()):"string"==typeof e&&loadData(e).then((e=>{this.params=e,t()})):(this.params={},t())}))}renderTemplateBlockBody(){t=t.bind(this),s=s.bind(this),l=l.bind(this),i=i.bind(this),n=n.bind(this),r=r.bind(this);const e=`\n            <div class="template-block__body">\n                ${function(){if(this.hasSlider){let e="";return this.params.controlItems.forEach((s=>{e+=`\n                    <li class="template-block__slide slider__slide" data-steps-slider-value="${s.value}">\n                        <img class="template-block__image"\n                            src="${this.otherParams.pathToImg}${s.value}/${t(s)}" alt="${this.otherParams.imgAlt}">\n                    </li>\n                    `})),`\n                <div class="template-block__slider slider">\n                    <ul class="template-block__slider-list slider__list">\n                        ${e}\n                    </ul>\n                </div>\n                <hr class="create-resume__subline template-block__subline">\n                `}return`\n                <div class="template-block__preview">\n                    <img src="${this.otherParams.pathToImg}${t(this.params.params)}" alt="${this.otherParams.imgAlt}" class="template-block__preview-image">\n                </div>\n                <hr class="create-resume__subline template-block__subline">\n                `}.call(this)}\n                ${this.hasSlider?function(){let e="";this.hasSlider&&(e+=this.getControls(this.params));return`\n                <div class="template-block__controls">\n                    ${e}\n                </div>\n            `}.call(this):'<div class="template-block__controls"></div>'}\n            </div>\n        `;function t(e){let t="";return(e.options||e).forEach(((e,s,l)=>{this.hasSlider,t+=e.controlItems[0].value,s!==l.length-1&&(t+="_")})),this.hasSlider?t+=`.${e.fileExtension}`:t+=`.${this.params.fileExtension}`,t}function s(){this.sliderInstance=sliders.find((e=>e.sliders.includes(this.sliderContainer))),this.sliderContainer.removeEventListener("sliderinit",s)}function l(e){const t=e.target,s=t.value;this.changeSlide(s,!1),this.mainValue=s,this.currentSlideRadio=t,this.renderTemplateBlockControls()}function i(e){return e.parentNode.querySelector("input").value===this.currentSlideRadio.value}function n(e){const t=e.currentTarget;if(t.parentNode.querySelector("input").classList.add("__mouseover"),i(t))return;const s=t.parentNode.querySelector("input").value;this.changeSlide(s,!0),this.renderTemplateBlockControls(!0,s),this.setControlsHeadlineName()}function r(e){const t=e.currentTarget;if(t.parentNode.querySelector("input").classList.remove("__mouseover"),this.setControlsHeadlineName(),i(t))return;const s=this.rootElem.querySelector(`[data-steps-slider-value="${this.mainValue}"]`).dataset.sliderSlideIndex;this.sliderInstance.slideTo(this.sliderContainer,s,{noEvent:!0}),this.controlBlocks.forEach((e=>{e.classList.remove("__removed"),e.classList.contains("__stays-shown")||e.remove()}))}this.rootElem.insertAdjacentHTML(this.renderPosition,e),this.hasSlider?(this.mainControlsBlock=this.rootElem.querySelector(".template-block__controls-block"),this.mainControlsBlock.classList.add("template-block__controls--main"),this.mainControls=Array.from(this.mainControlsBlock.querySelectorAll("input[type='radio']")||[]),this.sliderContainer=this.rootElem.querySelector(".slider"),this.sliderContainer.addEventListener("sliderinit",s),setTimeout(s,150),this.mainControls.forEach((e=>{e.addEventListener("change",l);const t=e.nextElementSibling;t.addEventListener("mouseover",n),t.addEventListener("mouseleave",r)})),this.sliderContainer.addEventListener("slidechange",this.onSlideChange)):this.renderTemplateBlockControls()}getControls(e){const t=e.type||"pill";let s;if("image"===t)s="template-block__images-list";else s="template-block__pills-list";let l="";return e.controlItems.forEach((s=>{"image"===t&&(l+=`\n                <li class="template-block__images-item">\n                    <input class="template-block__radio" id="${this.otherParams.name}-${e.controlName}-${s.value}" type="radio"\n                        name="${this.otherParams.name}-${e.controlName}" value="${s.value}" data-template-name="${s.title}">\n                    <label class="template-block__image-label" for="${this.otherParams.name}-${e.controlName}-${s.value}">\n                        <img src="${s.src}"\n                            alt="Превью - ${s.value}" class="template-block__images-img">\n                    </label>\n                </li>\n                `),"pill"===t&&(l+=`\n                <li class="template-block__pill">\n                    <input class="template-block__radio" id="${this.otherParams.name}-${e.controlName}-${s.value}"\n                        type="radio" name="${this.otherParams.name}-${e.controlName}" value="${s.value}" data-template-name="${s.title}">\n                    <label class="template-block__pill-label"\n                        for="${this.otherParams.name}-${e.controlName}-${s.value}">\n                        ${s.iconName?`<span class="template-block__pill-icon ${s.iconName}" style="${s.iconStyle}"></span>`:""}\n                        <span class="template-block__pill-text" style="${s.textStyle}">\n                            ${s.title}\n                        </span>\n                    </label>\n                </li>\n                `)})),`\n            <div class="template-block__controls-block">\n                <div class="template-block__controls-headline">\n                    <h3 class="template-block__controls-title">${e.controlTitle}:</h3>\n                    <p class="template-block__controls-name"></p>\n                </div>\n                <ul class="${s}">\n                    ${l}\n                </ul>\n            </div>\n        `}renderTemplateBlockControls(e=!1,t=null){l=l.bind(this),i=i.bind(this);let s="";if(this.hasSlider){(e&&t?this.params.controlItems.find((e=>e.value===t)):this.params.controlItems.find((e=>e.value===this.mainValue))).options.forEach((e=>{s+=this.getControls(e)}));const l=Array.from(this.mainControlsBlock.parentNode.querySelectorAll(".template-block__controls-block:not(.template-block__controls--main)"));e?l.forEach((e=>e.classList.add("__removed"))):l.forEach((e=>e.remove())),this.mainControlsBlock.insertAdjacentHTML("afterend",s),this.controlBlocks=Array.from(this.mainControlsBlock.parentNode.querySelectorAll(".template-block__controls-block:not(.template-block__controls--main)"))}else{this.params.params.forEach((e=>{s+=this.getControls(e)}));this.rootElem.querySelector(".template-block__controls").insertAdjacentHTML("afterbegin",s),this.controlBlocks=Array.from(this.rootElem.querySelectorAll(".template-block__controls-block"))}function l(e){e.currentTarget.parentNode.querySelector("input").classList.add("__mouseover"),this.setImageFilename()}function i(e){e.currentTarget.parentNode.querySelector("input").classList.remove("__mouseover"),this.setImageFilename()}this.controlBlocks.forEach((t=>{if(!e){t.classList.add("__stays-shown");t.querySelectorAll("input").forEach((e=>{e.addEventListener("change",this.setImageFilename);const t=e.nextElementSibling;t.addEventListener("mouseover",l),t.addEventListener("mouseleave",i)}));const e=t.querySelector("input");e.checked=!0,e.dispatchEvent(new Event("change"))}}))}setImageFilename(){let e="";if(this.hasSlider){this.controlBlocks.forEach(((t,s)=>{const l=t.querySelector(".__mouseover")||t.querySelector("input:checked");if(!l)return;const i=l.value;e+=i,s!==this.controlBlocks.length-1&&(e+="_")}));const t=this.params.controlItems.find((e=>e.value===this.mainValue)).fileExtension,s=this.sliderContainer.querySelector(".slider__slide--active").querySelector("img"),l=s.getAttribute("src").split("/");l[l.length-1]=`${e}.${t}`;const i=l.join("/");s.setAttribute("src",i)}else{this.controlBlocks.forEach(((t,s,l)=>{const i=t.querySelector("input.__mouseover")||t.querySelector("input:checked");i&&(e+=i.value,s!==l.length-1&&(e+="_"))}));const t=this.rootElem.querySelector(".template-block__preview-image"),s=t.getAttribute("src").split("/");s[s.length-1]=`${e}.${this.params.fileExtension}`,t.setAttribute("src",s.join("/"))}this.setControlsHeadlineName()}setDefaultFilenames(){this.params.controlItems.forEach((e=>{const t=this.rootElem.querySelector(`[data-steps-slider-value="${e.value}"]`).querySelector("img");let s="";e.options.forEach(((e,t,l)=>{s+=e.controlItems[0].value,t!==l.length-1&&(s+="_")}));const l=t.getAttribute("src").split("/");l[l.length-1]=`${s}.${e.fileExtension}`,t.setAttribute("src",l.join("/"))}))}setControlsHeadlineName(){Array.from(this.rootElem.querySelectorAll(".template-block__controls-block")).forEach((e=>{const t=e.querySelector(".template-block__controls-name"),s=e.querySelector("input.__mouseover")||e.querySelector("input:checked");if(!s)return;const l=s.dataset.templateName;t.innerHTML="",t.insertAdjacentText("afterbegin",l||"")}))}returnSavedControlsChecks(){this.savedControlsChecks&&this.savedControlsChecks.forEach((e=>{const t=Array.from(this.rootElem.querySelectorAll(`input[name="${e.name}"]`)).find((t=>t.value===e.value));t&&(t.checked=!0,t.dispatchEvent(new Event("change")))}))}changeSlide(e,t=!1){if(!this.sliderContainer||!this.sliderInstance)return;const s=this.sliderContainer.querySelector(`[data-steps-slider-value="${e}"]`).dataset.sliderSlideIndex;this.sliderInstance.slideTo(this.sliderContainer,s,{noEvent:t}),t||this.setDefaultFilenames()}onSlideChange(e){const t=e.detail.activeSlide.dataset.stepsSliderValue,s=this.mainControls.find((e=>e.value===t));s.checked=!0,s.dispatchEvent(new Event("change")),this.setDefaultFilenames()}}const createTemplateBlocks=[new CreateTemplateBlock(".resume-template",`${rootPath}json/resume-template.json`,{pathToImg:"/img/create-resume/cv-templates/",imgAlt:"Шаблон резюме",name:"resume_template"})];